<?php

/**
 * This is the model base class for the table "tbl_drug".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Drug".
 *
 * Columns in table "tbl_drug" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property integer $type
 * @property string $description
 * @property string $producer
 * @property integer $province
 * @property string $laititude
 * @property string $longitude
 * @property string $link
 *
 */
abstract class BaseDrug extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_drug';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Drug|Drugs', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('type, province', 'numerical', 'integerOnly'=>true),
			array('name, link', 'length', 'max'=>255),
			array('laititude, longitude', 'length', 'max'=>200),
			array('description, producer', 'safe'),
			array('name, type, description, producer, province, laititude, longitude, link', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, type, description, producer, province, laititude, longitude, link', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'type' => Yii::t('app', 'Type'),
			'description' => Yii::t('app', 'Description'),
			'producer' => Yii::t('app', 'Producer'),
			'province' => Yii::t('app', 'Province'),
			'laititude' => Yii::t('app', 'Laititude'),
			'longitude' => Yii::t('app', 'Longitude'),
			'link' => Yii::t('app', 'Link'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('producer', $this->producer, true);
		$criteria->compare('province', $this->province);
		$criteria->compare('laititude', $this->laititude, true);
		$criteria->compare('longitude', $this->longitude, true);
		$criteria->compare('link', $this->link, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}