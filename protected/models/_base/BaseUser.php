<?php

/**
 * This is the model base class for the table "tbl_user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "tbl_user" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $user_id
 * @property string $facebook_id
 * @property string $google_id
 * @property string $gender
 * @property string $facebook_access_token
 * @property string $photo
 * @property string $last_updated
 * @property string $email
 * @property string $name
 * @property string $description
 * @property string $ward
 * @property string $province
 * @property string $district
 * @property string $address
 * @property string $phone
 * @property string $device_token
 * @property string $platform
 *
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'facebook_id';
	}

	public function rules() {
		return array(
			array('facebook_id, google_id, gender, photo, ward, province, district, phone, platform', 'length', 'max'=>255),
			array('facebook_access_token', 'length', 'max'=>500),
			array('last_updated, email, name', 'length', 'max'=>200),
			array('description, address, device_token', 'safe'),
			array('facebook_id, google_id, gender, facebook_access_token, photo, last_updated, email, name, description, ward, province, district, address, phone, device_token, platform', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, facebook_id, google_id, gender, facebook_access_token, photo, last_updated, email, name, description, ward, province, district, address, phone, device_token, platform', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => Yii::t('app', 'User'),
			'facebook_id' => Yii::t('app', 'Facebook'),
			'google_id' => Yii::t('app', 'Google'),
			'gender' => Yii::t('app', 'Gender'),
			'facebook_access_token' => Yii::t('app', 'Facebook Access Token'),
			'photo' => Yii::t('app', 'Photo'),
			'last_updated' => Yii::t('app', 'Last Updated'),
			'email' => Yii::t('app', 'Email'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'ward' => Yii::t('app', 'Ward'),
			'province' => Yii::t('app', 'Province'),
			'district' => Yii::t('app', 'District'),
			'address' => Yii::t('app', 'Address'),
			'phone' => Yii::t('app', 'Phone'),
			'device_token' => Yii::t('app', 'Device Token'),
			'platform' => Yii::t('app', 'Platform'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('facebook_id', $this->facebook_id, true);
		$criteria->compare('google_id', $this->google_id, true);
		$criteria->compare('gender', $this->gender, true);
		$criteria->compare('facebook_access_token', $this->facebook_access_token, true);
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('last_updated', $this->last_updated, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('ward', $this->ward, true);
		$criteria->compare('province', $this->province, true);
		$criteria->compare('district', $this->district, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('device_token', $this->device_token, true);
		$criteria->compare('platform', $this->platform, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}