<?php

/**
 * This is the model base class for the table "tbl_biography_stat".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BiographyStat".
 *
 * Columns in table "tbl_biography_stat" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $height
 * @property double $weight
 * @property string $timestamp
 * @property string $last_updated
 * @property integer $patient_id
 *
 */
abstract class BaseBiographyStat extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_biography_stat';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BiographyStat|BiographyStats', $n);
	}

	public static function representingColumn() {
		return 'timestamp';
	}

	public function rules() {
		return array(
			array('height, patient_id', 'numerical', 'integerOnly'=>true),
			array('weight', 'numerical'),
			array('timestamp, last_updated', 'length', 'max'=>255),
			array('height, weight, timestamp, last_updated, patient_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, height, weight, timestamp, last_updated, patient_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'height' => Yii::t('app', 'Height'),
			'weight' => Yii::t('app', 'Weight'),
			'timestamp' => Yii::t('app', 'Timestamp'),
			'last_updated' => Yii::t('app', 'Last Updated'),
			'patient_id' => Yii::t('app', 'Patient'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('height', $this->height);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('timestamp', $this->timestamp, true);
		$criteria->compare('last_updated', $this->last_updated, true);
		$criteria->compare('patient_id', $this->patient_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}